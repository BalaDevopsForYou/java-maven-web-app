pipeline {
    agent any

    tools {
        maven 'MAVEN'
    }

    stages {
        stage('git-clone') {
            steps {
                git credentialsId: 'jenkins-git', url: 'https://github.com/rishiranjan10/maven-web-app.git'
            }
        }

        stage('maven build') {
            steps {
                script {
                    sh 'mvn clean install'
                }
            }
        }

        stage('maven testcases') {
            steps {
                script {
                    sh 'mvn clean test'
                }
            }
        }
    }

    post {
    success {
        echo 'Unit test cases performed successfully'

        slackSend(
            channel: 'monitoring',
            color: 'good', // 'good' is the color for success
            message: "${JOB_NAME} - Build #${BUILD_NUMBER} - Status: ${currentBuild.result}",
            teamDomain: 'devops-gangworkspace',
            tokenCredentialId: 'JENKINS-SLACK'
        )
    }

    failure {
        echo 'Unit test cases failed'

            slackSend(
                channel: 'monitoring',
                color: 'danger', // 'danger' is the color for failure
                message: "${JOB_NAME} - Build #${BUILD_NUMBER} - Status: ${currentBuild.result}",
                teamDomain: 'devops-gangworkspace',
                tokenCredentialId: 'JENKINS-SLACK'
            )
        }

        always {
            echo "unit test cases application"
            emailext attachLog: true, body: '''Hi Team,

            Please find the build details below.

            $PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:

            Check console output at $BUILD_URL to view the results.''', mimeType: 'text/html', replyTo: 'balu.pshell@gmail.com', subject: '$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!', to: 'balu.pshell@gmail.com'
        }
    }
}
